name: "Amber Language Action Test"
on: [push, pull_request]

jobs:      
  test-default:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compile Amber Code
        uses: ./
        with:
          root: test/default-entrypoint

      - name: Run compiled script and verify output
        working-directory: test/default-entrypoint
        run: |
          expected="Hello, World!"
          actual=$(./main.sh)
          echo "Expected: $expected"
          echo "Actual: $actual"
          if [ "$actual" != "$expected" ]; then
            echo "Error: Output mismatch"
            exit 1
          fi

  test-custom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compile Amber Code
        uses: ./
        with:
          root: test/custom-entrypoint
          entrypoints: "foo.ab"

      - name: Run compiled script and verify output
        working-directory: test/custom-entrypoint
        run: |
          expected="Hello, World!"
          actual=$(./foo.sh)
          echo "Expected: $expected"
          echo "Actual: $actual"
          if [ "$actual" != "$expected" ]; then
            echo "Error: Output mismatch"
            exit 1
          fi

  test-multiple-entrypoints:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Compile Amber Code
        uses: ./
        with:
          root: test/multiple-entrypoints
          entrypoints: "main.ab,foo.ab"

      - name: Run compiled script and verify output
        working-directory: test/multiple-entrypoints
        run: |
          expected="Hello, World!"
          first=$(./main.sh)
          second=$(./foo.sh)
          echo "Expected: $expected"
          echo "Actual (main): $first"
          echo "Actual (foo): $second"
          if [ "$first" != "$expected" ]; then
            echo "Error: Output mismatch (main)"
            exit 1
          fi
          if [ "$second" != "$expected" ]; then
            echo "Error: Output mismatch (foo)"
            exit 1
          fi
